name: Deploy Join Dust [prod]

on: 
  push:
    branches: 
      - master

jobs:
  compile:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [11, 12, 13]
    name: Java ${{ matrix.java }} compile
    steps:
    - uses: actions/checkout@v2
    - name: Set up Java
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}
    - run: mvn -f /pom.xml clean compile
  
  build:
    runs-on: ubuntu-latest
    needs: compile
    name: Build Maven Project
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Build and test project
        run: mvn -f /pom.xml clean verify
      - name: Upload Maven build artifact
        uses: actions/upload-artifact@v1
        with:
          name: artifact
          path: /target/joindust-backend.jar
    
  deploy:
    runs-on: ubuntu-latest
    needs: build
    name: Build Docker container and deploy to Kubernetes??
    steps:
      - uses: actions/checkout@v1
      - name: Download Maven build artifact
        uses: actions/download-artifact@v1
        with:
          name: artifact
      - name: Build Docker Container
        run: |
          mkdir -p joindust-backend/target
          mv artifact/joindust-backend.jar joindust-backend/target
          docker build -t somevendor/path joindust-backend
      - name: Access Secretes
        env:
          CI: true
          app.JWT_SECRET: ${{ app.JWT_SECRET }}
          app.JWT_EXPIRATION_IN_MS:  ${{ app.JWT_EXPIRATION_IN_MS }}
      
